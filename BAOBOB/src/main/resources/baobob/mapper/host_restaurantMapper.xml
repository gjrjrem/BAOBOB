<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="spring.mvc.baobob.host_restaurant.persistence.Host_restaurantDAO">
	<!-- 식당 총 관리자 - 매장 수 조회 -->
	<select id="getRestaurantCnt" resultType="int">
		SELECT count(*) FROM restaurant_tbl
	</select>

	<!-- 식당 총 관리자 - 각 매장 정보 조회 -->
	<select id="getRestaurantList" resultType="spring.mvc.baobob.vo.RestaurantVO">
		SELECT * FROM restaurant_tbl ORDER BY restaurant_index DESC
	</select>

	<!-- 식당 총 관리자 - 매장 추가 처리 -->
	<insert id="addRestaurant" parameterType="spring.mvc.baobob.vo.RestaurantVO">
		INSERT INTO restaurant_tbl(restaurant_index, restaurant_tel, restaurant_name)
		VALUES(restaurant_tbl_SEQ.nextval, #{restaurant_tel}, #{restaurant_name})
	</insert>

	<!-- 식당 총 관리자 - 식당 내 테이블 추가 처리 -->
	<insert id="addTable" parameterType="spring.mvc.baobob.vo.TableVO">
		INSERT INTO restaurant_table_tbl(restaurant_index, restaurant_table_index, table_row, table_col, table_state) 
		VALUES((SELECT MAX(restaurant_index) FROM restaurant_tbl), #{restaurant_table_index}, #{table_row}, #{table_col}, #{state})
	</insert>

	<!-- 식당 총 관리자 - 매장 정보 조회 -->
	<select id="viewRestaurant" resultType="spring.mvc.baobob.vo.RestaurantVO">
		SELECT * FROM restaurant_tbl WHERE restaurant_index = #{restaurant_index}
	</select>

	<!-- 식당 총 관리자 - 매장 내 테이블 정보 조회를 위한 좌석 수 조회 -->
	<select id="getColRow" resultType="spring.mvc.baobob.vo.TableVO">
		SELECT MAX(table_row) table_row, MAX(table_col) table_col 
		  FROM restaurant_table_tbl 
		 WHERE restaurant_index = #{restaurant_index} 
		   AND restaurant_schedule_index IS null
	</select>

	<!-- 식당 총 관리자 - 매장 내 테이블 정보 조회 -->
	<select id="getState" resultType="int">
		SELECT table_state 
		  FROM restaurant_table_tbl 
		 WHERE restaurant_index = #{restaurant_index} AND restaurant_table_index = #{restaurant_table_index}
		<if test="restaurant_schedule_index == null">
			AND restaurant_schedule_index IS null
		</if>
		<if test="restaurant_schedule_index != null">
			AND restaurant_schedule_index = #{restaurant_schedule_index}
		</if>
	</select>

	<!-- 식당 총 관리자 - 매장 수정 처리 -->
	<update id="modRestaurant" parameterType="spring.mvc.baobob.vo.RestaurantVO">
		UPDATE restaurant_tbl 
		   SET restaurant_tel = #{restaurant_tel}
		     , restaurant_name = #{restaurant_name} 
		 WHERE restaurant_index = #{restaurant_index}
	</update>

	<!-- 식당 총 관리자 - 매장 내 테이블 수정 처리 전 테이블 초기화 -->
	<delete id="resetTable" parameterType="spring.mvc.baobob.vo.RestaurantVO">
		DELETE FROM restaurant_table_tbl 
		 WHERE restaurant_index = #{restaurant_index} AND restaurant_schedule_index IS null
	</delete>

	<!-- 식당 총 관리자 - 식당 내 테이블 추가 처리 -->
	<insert id="modTable" parameterType="Map">
		INSERT INTO restaurant_table_tbl(restaurant_index, restaurant_table_index, table_row, table_col, table_state) 
		VALUES(#{restaurant_dto.restaurant_index}, #{table_dto.restaurant_table_index}, #{table_dto.table_row}, #{table_dto.table_col}, #{table_dto.state})
	</insert>

	<!-- 식당 총 관리자 - 매장 삭제 처리 -->
	<delete id="delRestaurant" parameterType="spring.mvc.baobob.vo.RestaurantVO">
		DELETE FROM restaurant_tbl WHERE restaurant_index = #{restaurant_index}
	</delete>

	<!-- ///////////////////////////////////////////////////////////////////////////////////////// -->

	<!-- 식당별 메뉴 개수 조회 -->
	<select id="getMenuCnt" resultType="int">
		SELECT count(*) FROM restaurant_menu_tbl WHERE restaurant_index = #{restaurant_index}
	</select>

	<!-- 각 메뉴 정보 조회 -->
	<select id="getMenuList" resultType="spring.mvc.baobob.vo.MenuVO">
		SELECT * 
		  FROM restaurant_menu_tbl 
		 WHERE restaurant_index = #{restaurant_index} 
		 ORDER BY restaurant_menu_index ASC
	</select>
	
	<!-- 메뉴 추가 전 메뉴 인덱스 계산 -->
	<select id="getMenuIndex" resultType="Integer">
		SELECT MAX(restaurant_menu_index)
		  FROM restaurant_menu_tbl
		 WHERE restaurant_index = #{restaurant_index}
	</select>

	<!-- 메뉴 추가 처리 -->
	<insert id="addMenu" parameterType="spring.mvc.baobob.vo.MenuVO">
		INSERT INTO restaurant_menu_tbl(restaurant_index, restaurant_menu_index, restaurant_menu_name, restaurant_menu_img, restaurant_menu_content, restaurant_menu_price) 
		VALUES(#{restaurant_index}, #{restaurant_menu_index}, #{restaurant_menu_name}, #{restaurant_menu_img}, #{restaurant_menu_content}, #{restaurant_menu_price})
	</insert>

	<!-- 수정할 메뉴 정보 보기 -->
	<select id="viewMenu" resultType="spring.mvc.baobob.vo.MenuVO">
		SELECT * 
		  FROM restaurant_menu_tbl 
		 WHERE restaurant_index = #{restaurant_index} 
		   AND restaurant_menu_index = #{restaurant_menu_index}
	</select>

	<!-- 메뉴 수정 처리 -->
	<update id="modMenu" parameterType="spring.mvc.baobob.vo.MenuVO">
		UPDATE restaurant_menu_tbl 
		   SET restaurant_menu_name = #{restaurant_menu_name}, restaurant_menu_img = #{restaurant_menu_img}
		     , restaurant_menu_content = #{restaurant_menu_content}, restaurant_menu_price = #{restaurant_menu_price} 
		 WHERE restaurant_menu_index = #{restaurant_menu_index}
		   AND restaurant_index = #{restaurant_index}
	</update>

	<!-- 메뉴 수정 처리 -->
	<delete id="delMenu" parameterType="spring.mvc.baobob.vo.MenuVO">
		DELETE FROM restaurant_menu_tbl 
		 WHERE restaurant_menu_index = #{restaurant_menu_index}
	</delete>

	<!-- 직원 수 조회 -->
	<select id="getEmployeeCnt" resultType="int">
		SELECT count(empl.member_id) 
		  FROM employee_tbl empl, member_tbl mem 
		 WHERE mem.member_id = empl.member_id AND mem.member_step IN (#{member_step}, (#{member_step} + 10))
	</select>

	<!-- 각 직원 정보 조회 -->
	<select id="getEmployeeList" resultType="spring.mvc.baobob.vo.EmployeeVO">
		SELECT empl.* 
		  FROM employee_tbl empl, member_tbl mem 
		 WHERE mem.member_id = empl.member_id
		   AND mem.member_step IN (#{member_step}, (#{member_step} + 10))
	</select>

	<!-- 전체 회원 수 조회(타 식당, 타 부서 직원 제외) -->
	<select id="getMemberCnt" resultType="int">
		SELECT count(*) 
		  FROM member_tbl 
		 WHERE NOT member_step IN (1, 2, 3, 4, 7, 8, 13, 51, 52, 53, 61, 62, 63)
	</select>

	<!-- 각 회원 정보 조회(타 식당, 타 부서 직원 제외) -->
	<select id="getMemberList" resultType="spring.mvc.baobob.vo.Member">
		SELECT * 
		  FROM member_tbl
		 WHERE NOT member_step IN (1, 2, 3, 4, 7, 8, 13, 51, 52, 53, 61, 62, 63) 
		 ORDER BY member_reg_date DESC
	</select>

	<!-- 회원 정보 상세 조회 -->
	<select id="viewMember" resultType="spring.mvc.baobob.vo.Member">
		SELECT * FROM member_tbl WHERE member_id = #{id}
	</select>

	<!-- 직원 등록/삭제 처리(member_step 변경) -->
	<update id="updateStep" parameterType="Map">
		UPDATE member_tbl 
		   SET member_step = #{member_step} 
		 WHERE member_id = #{member_id}
	</update>

	<!-- 직원 등록 처리 -->
	<insert id="addEmployee" parameterType="Map">
		INSERT INTO employee_tbl(employee_index, member_id, employee_jumin2, employee_date) 
		VALUES(employee_tbl_SEQ.nextval, #{member_id}, #{jumin2}, sysdate)
	</insert>

	<!-- 직원 정보 조회 -->
	<select id="viewEmployee" resultType="spring.mvc.baobob.vo.EmployeeVO">
		SELECT * FROM employee_tbl WHERE member_id = #{id}
	</select>

	<!-- 직원 정보 삭제 처리(member_step 계산) -->
	<select id="getCumPoint" resultType="int">
		SELECT member_cumpoint FROM member_tbl WHERE member_id = #{member_id}
	</select>

	<!-- 직원 정보 삭제 -->
	<delete id="delEmployee" parameterType="Map">
		DELETE FROM employee_tbl WHERE member_id = #{member_id}
	</delete>

	<!-- 예약 추가 처리 -->
	<insert id="addReserv" parameterType="Map">
		INSERT INTO restaurant_schedule_tbl(restaurant_index, restaurant_schedule_index, schedule_startTime, schedule_endTime) 
		VALUES(#{restaurant_dto.restaurant_index}, restaurant_schedule_tbl_SEQ.nextval, #{schedule_dto.schedule_startTime}, #{schedule_dto.schedule_endTime})
	</insert>

	<!-- 식당 총 관리자 - 매장 내 테이블 수정 처리 전 테이블 초기화 -->
	<delete id="resetTable2" parameterType="spring.mvc.baobob.vo.Restaurant_scheduleVO">
		DELETE FROM restaurant_table_tbl 
		 WHERE restaurant_index = #{restaurant_index} AND restaurant_schedule_index = #{restaurant_schedule_index}
	</delete>
	
	<!-- 날짜에 해당하는 테이블 예약 -->
	<insert id="modTable2" parameterType="Map">
		INSERT INTO restaurant_table_tbl(restaurant_index, restaurant_table_index, table_row, table_col, table_state, restaurant_schedule_index) 
		<if test="schedule_dto.restaurant_schedule_index == 0">
		VALUES(#{restaurant_dto.restaurant_index}, #{table_dto.restaurant_table_index}, #{table_dto.table_row}, #{table_dto.table_col}, #{table_dto.state}, restaurant_schedule_tbl_SEQ.CURRVAL)
		</if>
		<if test="schedule_dto.restaurant_schedule_index != 0">
		VALUES(#{restaurant_dto.restaurant_index}, #{table_dto.restaurant_table_index}, #{table_dto.table_row}, #{table_dto.table_col}, #{table_dto.state}, #{schedule_dto.restaurant_schedule_index})
		</if>
	</insert>

	<!-- 선택 날짜 예약 조회 -->
	<select id="getReservList" resultType="spring.mvc.baobob.vo.Restaurant_scheduleVO">
		SELECT * 
		  FROM restaurant_schedule_tbl
		 WHERE schedule_startTime &gt; to_char(to_date(#{startTime}, 'YY-MM-DD-HH24-MI'), 'YY-MM-DD-HH24-MI')
		   AND schedule_startTime &lt; to_char(to_date(#{endTime}, 'YY-MM-DD-HH24-MI'), 'YY-MM-DD-HH24-MI')
		   AND restaurant_index = #{restaurant_index}
	</select>

	<!-- restaurant_schedule_index 조회 -->
	<select id="getScheduleIndex" resultType="Integer">
		SELECT restaurant_schedule_index 
		  FROM restaurant_schedule_tbl 
		 WHERE schedule_starttime = #{schedule_startTime} 
		   AND schedule_endtime = #{schedule_endTime} 
		   AND restaurant_index = #{restaurant_index}
	</select>

	<!-- 식당 개수, 식당 인덱스 체크 -->
	<select id="getRestaurantIndex" resultType="int">
		SELECT restaurant_index FROM restaurant_tbl
	</select>
	
	<!-- 시작 시간, 종료 시간 체크 -->
	<select id="getTime" resultType="spring.mvc.baobob.vo.Restaurant_scheduleVO">
		SELECT schedule_startTime, schedule_endTime 
		  FROM restaurant_schedule_tbl 
		 WHERE restaurant_index = #{restaurant_index} 
		   AND restaurant_schedule_index = #{restaurant_schedule_index}
	</select>
	
	<!-- 주문 내역 추가(판매 내역) -->
	<insert id="addFoodHistory" parameterType="Map">
		INSERT INTO restaurant_food_history_tbl(restaurant_schedule_index, restaurant_menu_index, restaurant_index, restaurant_menu_count, restaurant_table_index) 
		VALUES(#{restaurant_schedule_index}, #{restaurant_menu_index}, #{restaurant_index}, #{restaurant_menu_count}, #{restaurant_table_index})
	</insert>
	
	<!-- 주문 내역 추가/일부 주문 취소 -->
	<update id="modFoodHistory" parameterType="Map">
		UPDATE restaurant_food_history_tbl 
		   SET restaurant_menu_count = #{restaurant_menu_count}
		 WHERE restaurant_menu_index = #{restaurant_menu_index} 
		   AND restaurant_schedule_index = #{restaurant_schedule_index} 
		   AND restaurant_index = #{restaurant_index}
		   AND restaurant_table_index = #{restaurant_table_index}
	</update>
	
	<!-- 주문 취소 처리 -->
	<delete id="delFoodHistory" parameterType="Map">
		DELETE FROM restaurant_food_history_tbl 
		 WHERE restaurant_menu_index = #{restaurant_menu_index} 
		   AND restaurant_schedule_index = #{restaurant_schedule_index} 
		   AND restaurant_index = #{restaurant_index}
		   AND restaurant_table_index = #{restaurant_table_index}
	</delete>

	<!-- 회원 정보 상세 조회 -->
	<select id="confirmId" resultType="Integer">
		SELECT member_step FROM member_tbl
		WHERE member_id = #{id}
	</select>
	
	<!-- 이미 주문한 메뉴인지 확인 -->
	<select id="getMenuCount" resultType="Integer">
		SELECT restaurant_menu_count 
		FROM restaurant_food_history_tbl 
		WHERE restaurant_schedule_index = #{restaurant_schedule_index} 
		AND restaurant_index = #{restaurant_index} 
		AND restaurant_menu_index = #{restaurant_menu_index} 
		AND restaurant_table_index = #{restaurant_table_index}
	</select>

	<!-- 주문한 가격 계산 -->
	<select id="getBill" resultType="Integer">
		SELECT SUM((m.restaurant_menu_price * f.restaurant_menu_count))
		  FROM restaurant_food_history_tbl f
			 , restaurant_menu_tbl m
		 WHERE f.restaurant_menu_index = m.restaurant_menu_index
		   AND f.restaurant_index = #{restaurant_index}
		   AND f.restaurant_index = m.restaurant_index
		   AND f.restaurant_schedule_index = #{restaurant_schedule_index}
		   AND f.restaurant_table_index = #{restaurant_table_index}
	</select>
	
	<!--'사용중'인 테이블 '사용가능'으로 상태 변경 -->
	<update id="modState" parameterType="Map">
		UPDATE restaurant_table_tbl
		   SET table_state = 1
		 WHERE restaurant_index = #{restaurant_index}
		   AND restaurant_schedule_index = #{restaurant_schedule_index}
		   AND restaurant_table_index = #{restaurant_table_index}
	</update>
	
	<!-- 이용 내역 추가 처리 -->
	<insert id="addHistory" parameterType="String">
		INSERT INTO history_tbl(history_index, history_date, member_id) 
		VALUES(history_tbl_SEQ.NEXTVAL, sysdate, #{id})
	</insert>
	
	<!-- 식당 이용 내역 추가 처리 -->
	<insert id="addRestaurantHistory" parameterType="Map">
		INSERT INTO restaurant_history_tbl(history_index, restaurant_schedule_index, restaurant_table_index, discount, member_use_point, payvalue) 
		VALUES(history_tbl_SEQ.CURRVAL, #{restaurant_schedule_index}, #{restaurant_table_index}, #{discount}, #{member_use_point}, #{payValue})
	</insert>

	<!-- 사용 가능한 포인트 조회 -->
	<select id="getPoint" resultType="int">
		SELECT member_point FROM member_tbl WHERE member_id = #{id}
	</select>
	
	<!-- 사용한 포인트, 새로 적립된 포인트 계산 -->
	<update id="modMemberPoint" parameterType="Map">
		UPDATE member_tbl
		   SET member_point = #{member_point}
		     , member_cumpoint = (SELECT member_cumpoint 
		     						FROM member_tbl 
		     					   WHERE member_id = #{member_id}) + #{member_Cumpoint}
		 WHERE member_id = #{member_id}
	</update>

	<!-- 각 메뉴 정보 조회 -->
	<select id="getMenuName" resultType="String">
		SELECT restaurant_menu_name 
		  FROM restaurant_menu_tbl 
		 WHERE restaurant_index = #{restaurant_index} 
		 ORDER BY restaurant_menu_index DESC
	</select>
	
	<!-- 메뉴별 차트 -->
	<resultMap type="spring.mvc.baobob.vo.Restaurant_ChartVO" id="MenuCountChart">
		<id property="kind"	column="kind" />
		<result property="value" column="value" />
	</resultMap>
	
	<select id="getMenuCountChart" resultMap="MenuCountChart">
		SELECT NVL(menu.restaurant_menu_name, '합계') AS kind
		     , SUM(menu.restaurant_menu_price * food.restaurant_menu_count) AS value 
		  FROM restaurant_menu_tbl menu
		     , restaurant_food_history_tbl food 
		 WHERE menu.restaurant_menu_index = food.restaurant_menu_index
		   AND food.restaurant_index = #{restaurant_index}
		   AND menu.restaurant_index = food.restaurant_index
		 GROUP BY ROLLUP(menu.restaurant_menu_name)
	</select>
	
	<!-- 성별 결산 -->
	<select id="getSexChartContent" resultType="hashmap">
		SELECT NVL(mem.member_sex, 'total') AS kind
			 , SUM(menu.restaurant_menu_price * food.restaurant_menu_count) AS value 
		  FROM member_tbl mem
		     , restaurant_menu_tbl menu
		     , restaurant_food_history_tbl food
		     , history_tbl his
		     , restaurant_history_tbl reshis
		 WHERE menu.restaurant_menu_index = food.restaurant_menu_index
		   AND food.restaurant_index = #{restaurant_index}
		   AND menu.restaurant_index = food.restaurant_index
		   AND mem.member_id = his.member_id
		   AND his.history_index = reshis.history_index
		   AND reshis.restaurant_schedule_index = food.restaurant_schedule_index
		   AND reshis.restaurant_table_index = food.restaurant_table_index
		 GROUP BY ROLLUP(mem.member_sex)
	</select>
</mapper>
