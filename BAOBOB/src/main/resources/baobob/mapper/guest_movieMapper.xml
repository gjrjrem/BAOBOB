<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="spring.mvc.baobob.guest_movie.persistence.Guest_movieDAO">
	
	<!-- 영화 총갯수 -->
	<select id="getMovieCnt" resultType="int">
		SELECT COUNT(*)
		FROM movie_tbl
	</select>
	
	<!-- movie_state에 따른 영화갯수 -->
	<select id="getMovieStateCnt" resultType="int">
		SELECT COUNT(*)
		FROM movie_tbl
		WHERE movie_state = #{movie_state}
	</select>

	<!-- 영화 전체 리스트 -->
	<select id="getAllMovies" resultType="spring.mvc.baobob.vo.MovieVO">
		<![CDATA[
			SELECT * 
			FROM (SELECT movie_index, movie_title, movie_content, movie_janre,
						 movie_age, movie_rel_date, movie_director, movie_star, 
						 movie_country, movie_runtime, movie_poster, movie_trailer,
						 movie_state, rownum rNum 
					FROM ( 
							SELECT * FROM movie_tbl 
							ORDER BY movie_rel_date DESC, movie_index ASC 
						 ) 
				 ) 
			 WHERE  rNum >= #{start} AND rNum <= #{end}
		 ]]>
	</select>
	
	<!-- movie_state에 따른 영화리스트 -->
	<select id="getMovieStateMovies" resultType="spring.mvc.baobob.vo.MovieVO">
		<![CDATA[
			SELECT * 
			FROM (SELECT movie_index, movie_title, movie_content, movie_janre,
						 movie_age, movie_rel_date, movie_director, movie_star, 
						 movie_country, movie_runtime, movie_poster, movie_trailer,
						 movie_state, rownum rNum 
					FROM ( 
							SELECT * FROM movie_tbl 
							WHERE movie_state = #{movie_state}
							ORDER BY movie_rel_date DESC, movie_index ASC 
						 ) 
				 ) 
			 WHERE  rNum >= #{start} AND rNum <= #{end}
		 ]]>
	</select>
	
	<!-- 영화 상세정보 -->
	<select id="getMovie" resultType="spring.mvc.baobob.vo.MovieVO">
		SELECT * 
		FROM movie_tbl
		WHERE movie_index = #{movie_index}
	</select>
	
	<!-- movie_index에 따른 리뷰 갯수 -->
	<select id="getMovieReviewCnt" resultType="int">
		SELECT COUNT(*)
		FROM movie_review_tbl
		WHERE movie_index = #{movie_index}
	</select>
	
	<!-- movie_index에 따른 리뷰 리스트 -->
	<select id="getAllMovieReviews" resultType="spring.mvc.baobob.vo.ReviewVO">
		<![CDATA[
			SELECT * 
			FROM (SELECT review_index, review_grade, review_content, member_id, review_state, 
			            review_reg_date, rownum rNum 
			        FROM ( 
			                SELECT review_tbl.review_index, review_grade, review_content, member_id, review_state, 
			           				 review_reg_date 
			                FROM review_tbl JOIN movie_review_tbl
			                ON (review_tbl.review_index = movie_review_tbl.review_index)
			                JOIN movie_tbl
			                ON (movie_review_tbl.movie_index = movie_tbl.movie_index)
			                WHERE movie_review_tbl.movie_index= #{movie_index}
			                ORDER BY review_tbl.review_reg_date DESC, review_tbl.review_index ASC 
			             ) 
			     ) 
			 WHERE  rNum >= #{start} AND rNum <= #{end}
		]]>
	</select>
	
	<!-- 한아이디로 한영화에 한 리뷰만 쓸수 있음 - 썼었는지 확인 -->
	<select id="movieReviewCheck" resultType="int">
		SELECT COUNT(*)
		FROM movie_review_tbl join review_tbl
		ON (review_tbl.review_index = movie_review_tbl.review_index)
		WHERE member_id = #{member_id} 
		AND movie_index = #{movie_index}
		AND review_state = 1
	</select>
	
	<!-- 리뷰 작성 -->
	<insert id="insertReview" parameterType="spring.mvc.baobob.vo.ReviewVO">
		INSERT INTO review_tbl VALUES(review_tbl_seq.nextval, #{review_grade}, #{review_content}, #{member_id}, #{review_state}, sysdate)
	</insert>
	
	<!-- movieReview 추가 -->
	<insert id="insertMovieReview" parameterType="java.util.Map">
		INSERT INTO movie_review_tbl VALUES(review_tbl_seq.currval, #{movie_index})
	</insert>
	
	<!-- 좋아요 누른 사람 수 -->
	<select id="movieLike" resultType="String">
		SELECT COUNT(*)
		FROM movie_review_tbl JOIN review_tbl
		ON (movie_review_tbl.review_index = review_tbl.review_index)
		WHERE movie_review_tbl.movie_index = #{movie_index}
		AND review_tbl.review_grade = 1
	</select>
	
	<!-- 리뷰 수정 -->
	<update id="updateReview" parameterType="spring.mvc.baobob.vo.ReviewVO">
		UPDATE review_tbl SET review_grade = #{review_grade}, review_content = #{review_content}
		WHERE review_index = #{review_index}
	</update>
	
	<!-- movieReview 삭제 -->
	<delete id="deleteMovieReview" parameterType="java.util.Map">
		DELETE FROM movie_review_tbl
		WHERE movie_index = #{movie_index} AND review_index = #{review_index}
	</delete>
	
	<!-- 리뷰 삭제 -->
	<delete id="deleteReview" parameterType="int">
		DELETE FROM review_tbl 
		WHERE review_index = #{review_index}
	</delete>
	
	<!-- 예매 - 전체 영화 리스트(상영 종료 된것 빼고) -->
	<select id="getAllReserveMovies" resultType="spring.mvc.baobob.vo.MovieVO">
		SELECT *
		FROM movie_tbl
		WHERE movie_state!=2
		ORDER BY movie_state DESC
	</select>
	
	<!-- 영화별 예매 되는 날짜 갯수 -->
	<select id="getDateCnt" resultType="int">
		SELECT COUNT(*)
		FROM  theater_tbl
		JOIN theater_schedule_tbl
		ON (theater_tbl.theater_index = theater_schedule_tbl.theater_index) JOIN movie_tbl
		ON (theater_schedule_tbl.movie_index = movie_tbl.movie_index)
		WHERE movie_tbl.movie_index = #{movie_index}
		AND TO_CHAR(theater_schedule_tbl.schedule_startdate,'YYMMDD') = TO_CHAR(SYSDATE+#{plusDay},'YYMMDD')
	</select>
	
	<!-- 예매 - 영화 되는 날짜, 상영관 정보 -->
	<select id="getAllReserveSchedules" resultType="spring.mvc.baobob.vo.Theater_scheduleVO">
		SELECT * 
		FROM  theater_tbl
		JOIN theater_schedule_tbl
		ON (theater_tbl.theater_index = theater_schedule_tbl.theater_index) JOIN movie_tbl
		ON (theater_schedule_tbl.movie_index = movie_tbl.movie_index)
		WHERE movie_tbl.movie_index = #{movie_index}
		AND TO_CHAR(theater_schedule_tbl.schedule_startdate,'YYMMDD') = TO_CHAR(SYSDATE+#{plusDay},'YYMMDD')
		ORDER BY theater_tbl.theater_index ASC, theater_schedule_tbl.schedule_startdate ASC
	</select>
	
	<!-- 상영관 갯수 -->
	<select id="theaterCnt" resultType="int">
		SELECT COUNT(*) FROM theater_tbl
	</select>
	
	<!-- 각 상영관 마다의 총좌석 갯수 구하기 -->
	<select id="theaterSeats" resultType="int">
		SELECT COUNT(*)
		FROM theater_seat_tbl
		WHERE theater_index = #{theater_index}
		AND theater_schedule_index = -1
		AND seat_state IN(3,4,5)
	</select>


</mapper>