<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="spring.mvc.baobob.android.persistence.AndroidDAO">

	<!-- 영화 목록 -->
	<select id="getMovieList" resultType="spring.mvc.baobob.vo.Android">
		SELECT movie_title data1, movie_poster data2
		FROM movie_tbl
	</select>

	<!-- 식당 목록 -->
	<select id="getRestaurantList" resultType="spring.mvc.baobob.vo.Android">
		SELECT restaurant_index data1, restaurant_name data3
		FROM restaurant_tbl
	</select>

	<!-- 영화 예매 건수 -->
	<select id="getUseMovieCnt" resultType="int">
		SELECT COUNT(*)
		FROM movie_history_tbl mh, history_tbl ht
		WHERE mh.history_index = ht.history_index
			AND ht.member_id = #{id}
	</select>
	
	<!-- 식당 예약 건수 -->
	<select id="getUseRestaurantCnt" resultType="int">
		SELECT COUNT(*)
		 FROM restaurant_history_tbl rh, history_tbl ht
		WHERE rh.history_index = ht.history_index
		  AND ht.member_id = #{id}
		  AND rh.restaurant_history_state = 0
	</select>
	
	<!-- 주차 이용 건수 -->
	<select id="getUseParkingCnt" resultType="int">
		SELECT COUNT(*)
		FROM park_history_tbl ph, history_tbl ht
		WHERE ph.history_index = ht.history_index
			AND ht.member_id = #{id}
	</select>

	<!-- 문의 내역(1:1, 분실물) -->
	<select id="getBoardList" resultType="spring.mvc.baobob.vo.BoardVO">
		<![CDATA[
		SELECT board_type, board_subject, board_content
		FROM board_tbl
		WHERE member_id = #{id}
		    AND board_type IN (2, 3)
		    AND	TO_CHAR(board_reg_date, 'DDD') >= TO_CHAR(SYSTIMESTAMP - 10, 'DDD')
		]]>
	</select>
	
	<!-- 영화 예매 내역 -->
	<select id="getMemberMovieTicketing" resultType="spring.mvc.baobob.vo.Android">
		SELECT h_idx data1, ss data2, se data3, movie_title data4, movie_poster data5
		FROM (
		    SELECT movie_index m_idx, h_idx, schedule_startTime ss, schedule_endTime se
		    FROM (
		        SELECT m.history_index h_idx, t.theater_schedule_index idx
		        FROM history_tbl h, movie_history_tbl m, theater_seat_tbl t
		        WHERE h.history_index = m.history_index
		            AND m.history_index = t.history_index
		            AND t.seat_state = 6
		            AND h.member_id = #{id}
		        ), theater_schedule_tbl ts
		    WHERE ts.theater_schedule_index = idx
		    ), movie_tbl mt
		WHERE mt.movie_index = m_idx
        ORDER BY h_idx
	</select>
	
	
	<!-- 주차 이용 내역 -->
	<select id="getMemberParking" resultType="spring.mvc.baobob.vo.Android">
		SELECT p_history_date data1, p_history_in data2, p_history_out data3, p_history_space data4, p_history_price data5
		FROM history_tbl h, park_history_tbl p
		WHERE h.history_index = p.history_index
		       AND h.member_id = #{id}
	</select>
	
	<!-- 회원 정보 수정 -->
	<update id="anMemberUpdate" parameterType="spring.mvc.baobob.vo.Member">
		UPDATE member_tbl
		SET
			member_pwd = #{member_pwd},
			member_name = #{member_name},
			member_tel = #{member_tel},
			member_address = #{member_address},
			member_email = #{member_email}
		WHERE member_id = #{member_id}
	</update>
	
	<!-- 영화 정보 -->
	<select id="androidMovieInfo" resultType="spring.mvc.baobob.vo.MovieVO">
		SELECT *
		FROM movie_tbl
		WHERE movie_title = #{movie_title}
	</select>
	
	<!-- 식당 예약 내역 -->
	<select id="getUseRestaurantList" resultType="spring.mvc.baobob.vo.Android">
		SELECT t_index data1
		     , s_time data2
		     , e_time data3
		     , r_name data4
		     , r_tel data5
		  FROM (
		    SELECT rh.restaurant_table_index t_index
		         , sc.schedule_startTime s_time
		         , sc.schedule_endTime e_time
		         , rs.restaurant_name r_name
		         , rs.restaurant_tel r_tel
		      FROM restaurant_history_tbl rh
		         , history_tbl ht
		         , restaurant_schedule_tbl sc
		         , restaurant_tbl rs
		     WHERE rh.history_index = ht.history_index
		       AND rh.restaurant_schedule_index = sc.restaurant_schedule_index
		       AND rs.restaurant_index = sc.restaurant_index
		       AND ht.member_id = #{id}
		       AND rh.restaurant_history_state = 0
		    )
	</select>
	
	<!-- 예매) 해당 날짜 상영하는 영화  -->
	<select id="getMovieSchedule" resultType="spring.mvc.baobob.vo.Android">
		SELECT tidx data1, m.movie_title data2, startTime data3, endTime data4, tsidx data5
		FROM movie_tbl m, (
			SELECT movie_index idx, theater_index tidx, schedule_startTime startTime, schedule_endTime endTime, theater_schedule_index tsidx
			FROM theater_schedule_tbl
			WHERE TO_CHAR(schedule_startdate,'YYMMDD') = TO_CHAR(TO_DATE(#{day}, 'YYYYMMDD'),'YYMMDD')
		)
		WHERE idx = m.movie_index
	</select>
	
	<!-- 회원의 포인트 -->
	<select id="getMemberPoint" resultType="int">
		SELECT member_point
		FROM member_tbl
		WHERE member_id = #{id}
	</select>
	
	<!-- 영화 결제)  -->
	<!-- 3. 좌석 테이블의 seat_state 변경 -->
	<update id="updateSeatState" parameterType="java.util.Map">
		UPDATE theater_seat_tbl 
		SET 
			seat_state = 6,
			member_id = #{member_id},
			history_index = history_tbl_seq.currval
		WHERE seat_index = #{seat_index}
	</update>
	
	<!-- 영화 결제)  -->
	<!-- 5. Update movie_tbl  movie_count + totalCnt해주기(영화관람객수 증가) -->
	<update id="movieCountUpdate" parameterType="java.util.Map">
		UPDATE movie_tbl 
		SET movie_count = movie_count + #{totalCnt}
		WHERE movie_title = #{movie_title}
	</update>
	
	<!-- 식당 메뉴 ) MainList에서 -->
	<select id="getRestaurantMenu" resultType="spring.mvc.baobob.vo.Android">
		SELECT idx, data1, data2, data3 
		FROM (
			SELECT  rt.restaurant_index idx,
					rt.restaurant_name data1,
	 			  	restaurant_menu_name data2,
	 			  	restaurant_menu_price data3
			FROM restaurant_menu_tbl rmt JOIN restaurant_tbl rt
			    ON rmt.restaurant_index = rt.restaurant_index
			ORDER By restaurant_menu_index
		)
		WHERE idx = #{restaurant_index}
	</select>
	
	<!-- 식당 메뉴 ) MainPage에서 -->
	<select id="getRestaurantTitleMenu" resultType="spring.mvc.baobob.vo.Android">
		SELECT data1, data2, data3, idx data4 
		FROM (
			SELECT  rt.restaurant_index idx,
					rt.restaurant_name data1,
	 			  	restaurant_menu_name data2,
	 			  	restaurant_menu_price data3
			FROM restaurant_menu_tbl rmt JOIN restaurant_tbl rt
			    ON rmt.restaurant_index = rt.restaurant_index
			ORDER By restaurant_menu_index
		)
		WHERE data1 = #{restaurant_name}
	</select>
	
	<!-- 식당 스케쥴 idx -->
	<select id="getScheduleIndex" resultType="String">
		SELECT restaurant_schedule_index  
		FROM restaurant_schedule_tbl 
	 	WHERE TO_CHAR(schedule_starttime, 'yyyy-MM-dd HH24:MI') = TO_CHAR(TO_DATE(#{start}, 'yyyy-MM-dd HH24:MI'), 'yyyy-MM-dd HH24:MI')
		   AND restaurant_index = #{restIdx}
	</select>
	
	<!-- 식당 좌석 상태 정보 -->
	<select id="getRestaurantSeatState" resultType="spring.mvc.baobob.vo.Android">
		SELECT restaurant_table_index data1, table_state data2 
		FROM restaurant_table_tbl 
		WHERE restaurant_index = #{restIdx} 
		<if test="scheduleIdx == NULL">
            AND restaurant_schedule_index IS NULL
        </if>
        <if test="scheduleIdx != NULL">
        	AND restaurant_schedule_index  = #{scheduleIdx}
        </if>
		ORDER BY table_row, table_col
	</select>
	
	<!-- 식당 예약된 좌석 -->
	<!-- <select id="getRestaurantTicketSeat" resultType="spring.mvc.baobob.vo.Android">
        SELECT data1, data2
		FROM (
			SELECT rs.restaurant_schedule_index data1, rt.restaurant_table_index data2
			FROM restaurant_schedule_tbl rs, restaurant_table_tbl rt
			WHERE rs.restaurant_index = rt.restaurant_index
			    AND rt.restaurant_index = #{rest_index}
                AND rt.table_state = 3
			    AND TO_CHAR(rs.schedule_starttime, 'yyyy-MM-dd HH24:MI') = TO_CHAR(TO_DATE(#{start}, 'yyyy-MM-dd HH24:MI'), 'yyyy-MM-dd HH24:MI')
			)
		GROUP BY data1, data2
		ORDER BY data2
	</select> -->
	
	<!-- 예약 1) 식당 스케줄 등록 -->
	<insert id="setRestaurantSchedule" parameterType="spring.mvc.baobob.vo.Restaurant_scheduleVO">
		INSERT INTO restaurant_schedule_tbl
			(restaurant_index, restaurant_schedule_index, schedule_startTime, schedule_endTime) 
		VALUES
			(#{restaurant_index}, restaurant_schedule_tbl_SEQ.nextval, #{schedule_startTime}, #{schedule_endTime})
	</insert>
	
	<!-- 예약 2) 식당 예약 테이블 추가 -->
	<update id="setRestaurantTable" parameterType="java.util.Map">
		INSERT INTO restaurant_table_tbl
			(restaurant_index, restaurant_table_index, table_row, table_col, table_state, restaurant_schedule_index)
		VALUES
		<if test="scheduleIdx.equals('0')">
			(#{restaurant_index}, #{restaurant_table_index}, #{table_row}, #{table_col}, #{table_state}, restaurant_schedule_tbl_SEQ.CURRVAL)
		</if>
		<if test="!scheduleIdx.equals('0')">
			(#{restaurant_index}, #{restaurant_table_index}, #{table_row}, #{table_col}, #{table_state}, #{scheduleIdx})
		</if>
	</update>
	
	<!-- 예약 3) 히스토리 추가 -->
	<insert id="setRestaurantMainHistory" parameterType="String">
		INSERT INTO history_tbl
			(history_index, history_date, member_id)
		VALUES
			(history_tbl_SEQ.NEXTVAL, SYSTIMESTAMP, #{member_id})
	</insert>
	
	<!-- 예약 4) 식당 히스토리 추가 -->
	<insert id="setRestaurantHistory" parameterType="java.util.Map">
		INSERT INTO restaurant_history_tbl
			(history_index, restaurant_schedule_index, restaurant_table_index, discount, member_use_point, payvalue, restaurant_history_state) 
		VALUES
			(history_tbl_SEQ.CURRVAL, #{scheduleIdx}, #{restTableIndex}, 0, 0, 0, 0)
	</insert> 
</mapper>